---

- include_role:
    name: postinstall/credentials/common
    tasks_from: cluster_find_ranger

- name: Download list of existing policies
  uri:
    url: "{{ ranger_api_url }}/policy"
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
    return_content: yes
    headers:
      Accept: "application/json"
  register: _policy_list
  changed_when: false

- set_fact:
    _existing_ranger_policies: >
      {{
        _policy_list.json
         | json_query("[].name")
         | list
      }}

- name: Download list of plugins
  uri:
    url: "{{ ranger_api_url }}/plugins/info"
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
    return_content: yes
    headers:
      Accept: "application/json"
  register: _plugin_list
  changed_when: false

- set_fact:
    _existing_ranger_plugins: >
      {{
        _plugin_list.json
          | json_query("[].serviceName")
          | list
      }}

- name: Create provisioning users for missing policies
  uri:
    url: "{{ ranger_url }}/service/xusers/secure/users"
    status_code:
      - 200
      - 400
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', 'user.j2') | from_yaml | to_json }}"
    body_format: json
  vars:
    xusername: "{{ postinstall_user_prefix }}{{ credential.name }}"
    xpassword: "{{ lookup('password', '/dev/null length=15') }}"
  loop: "{{ combined_postinstall_credentials }}"
  loop_control:
    loop_var: credential
    label: "{{ credential.name }}"
  when: not (use_ranger_keyadmin | default(False))

- name: Grant the provisioning user the required permissions
  uri:
    url: "{{ ranger_api_url }}/policy"
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', 'policy.j2') | from_yaml | to_json }}"
    body_format: json
    return_content: yes
  loop: "{{ policies }}"
  loop_control:
    loop_var: policy
    label: "{{ policy.name }}"
  register: _policy_create_response
  changed_when: true
  when:
    - policy.name ~ postinstall_policy_suffix not in _existing_ranger_policies
    - policy.meta.when | default(true)
    - policy.meta.plugin in _existing_ranger_plugins

- set_fact:
    _policy_updated_times: >
      {{
        _policy_create_response.results
        | json_query(query)
      }}
  vars:
    query: "[].json.{name: name, updateTime: updateTime, service: service}"

- name: Check the policies have been applied
  uri:
    url: "{{ ranger_api_url }}/plugins/info"
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
    return_content: yes
    headers:
      Accept: application/json
  register: _plugins_info
  changed_when: false
  until: "lookup('template', 'compare_update_times.j2')"
  retries: 10
  delay: 15
