---

- include_role:
    name: postinstall/credentials/common
    tasks_from: cluster_find_ranger

- name: List all the ranger policies
  uri: 
    url: "{{ ranger_api_url }}/policy"
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
  register: ranger_policies
  changed_when: false

- set_fact:
    provisioning_policy_ids: >
      {{
        ranger_policies.json
         | json_query('[?contains(policyLabels, `provisioning_temp`)].id')
      }}

- name: Remove ranger provisioning policy
  uri:
    url: "{{ ranger_api_url }}/policy/{{ policy_id }}"
    method: DELETE
    user: "{{ ranger_admin_username }}"
    password: "{{ ranger_admin_password }}"
    force_basic_auth: yes
    status_code:
      - 204
  loop: "{{ provisioning_policy_ids }}"
  loop_control:
    loop_var: policy_id
  changed_when: true

- name: Teardown ranger provisioning users
  block:

  - name: List all the ranger users
    uri: 
      url: "{{ ranger_url }}/service/xusers/users"
      user: "{{ ranger_admin_username }}"
      password: "{{ ranger_admin_password }}"
      force_basic_auth: yes
      headers:
        Accept: application/json
    register: ranger_users
    changed_when: false

  - name: Remove ranger provisioning user
    uri:
      url: "{{ ranger_url }}/service/xusers/secure/users/id/{{ user_info[0]['id'] }}?forceDelete=true"
      method: DELETE
      user: "{{ ranger_admin_username }}"
      password: "{{ ranger_admin_password }}"
      force_basic_auth: yes
      status_code:
        - 204
    loop: "{{ combined_postinstall_credentials }}"
    loop_control:
      loop_var: credential
      label: "{{ credential.name }}"
    vars:
      xusername: "{{ postinstall_user_prefix }}{{ credential.name }}"
      user_query: "vXUsers[?name==`{{ xusername }}`].{ id: id, name: name }"
      user_info: "{{ ranger_users.json | default({}) | json_query(user_query) }}"
    when: user_info | length > 0
    changed_when: true

  when: not (use_ranger_keyadmin | default(False))
